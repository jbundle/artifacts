<repository lastmodified='20230331105605.501'>
  <resource id='base64coder/2010.0.0.19' symbolicname='base64coder' presentationname='base64coder OSGi Bundle' uri='mvn:biz.source_code/base64coder/2010-12-19' version='2010.0.0.19'>
    <description>This OSGi bundle simply wraps base64coder-2010-12-19.jar artifact.</description>
    <size>5189</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='base64coder'/>
      <p n='presentationname' v='base64coder OSGi Bundle'/>
      <p n='version' t='version' v='2010.0.0.19'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='biz.source_code.base64Coder'/>
      <p n='version' t='version' v='2010.0.0.19'/>
    </capability>
  </resource>
  <resource id='bson/3.12.12' symbolicname='bson' presentationname='bson OSGi Bundle' uri='mvn:org.mongodb/bson/3.12.12' version='3.12.12'>
    <description>This OSGi bundle simply wraps bson-3.12.12.jar artifact.</description>
    <size>508048</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='bson'/>
      <p n='presentationname' v='bson OSGi Bundle'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson.codecs,org.bson.codecs.configuration,org.bson.conversions,org.bson.io,org.bson.json,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.assertions'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.codecs'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.codecs.configuration,org.bson.conversions,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.codecs.configuration'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson.codecs'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.codecs.jsr310'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.codecs,org.bson.codecs.configuration'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.codecs.pojo'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.codecs,org.bson.codecs.configuration,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.codecs.pojo.annotations'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.conversions'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.codecs.configuration'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.diagnostics'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.internal'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.codecs,org.bson.codecs.configuration'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.io'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.json'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.types'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.util'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.xml.bind))' extend='false' multiple='false' optional='true'>Import package javax.xml.bind;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.bson)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.assertions)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.assertions;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.codecs)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.codecs;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.codecs.configuration)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.codecs.configuration;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.codecs.pojo.annotations)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.codecs.pojo.annotations;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.conversions)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.conversions;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.diagnostics)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.diagnostics;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.internal)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.internal;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.io)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.io;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.json)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.json;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.types)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.types;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.util)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.util;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j))' extend='false' multiple='false' optional='true'>Import package org.slf4j;resolution:=optional</require>
  </resource>
  <resource id='commons-collections/3.2.2' symbolicname='commons-collections' presentationname='commons-collections OSGi Bundle' uri='mvn:commons-collections/commons-collections/3.2.2' version='3.2.2'>
    <description>This OSGi bundle simply wraps commons-collections-3.2.2.jar artifact.</description>
    <size>582193</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='commons-collections'/>
      <p n='presentationname' v='commons-collections OSGi Bundle'/>
      <p n='version' t='version' v='3.2.2'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections'/>
      <p n='version' t='version' v='3.2.2'/>
      <p n='uses:' v='org.apache.commons.collections.keyvalue'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.bag'/>
      <p n='version' t='version' v='3.2.2'/>
      <p n='uses:' v='org.apache.commons.collections,org.apache.commons.collections.collection'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.bidimap'/>
      <p n='version' t='version' v='3.2.2'/>
      <p n='uses:' v='org.apache.commons.collections,org.apache.commons.collections.collection,org.apache.commons.collections.iterators,org.apache.commons.collections.keyvalue,org.apache.commons.collections.map'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.buffer'/>
      <p n='version' t='version' v='3.2.2'/>
      <p n='uses:' v='org.apache.commons.collections,org.apache.commons.collections.collection'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.collection'/>
      <p n='version' t='version' v='3.2.2'/>
      <p n='uses:' v='org.apache.commons.collections'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.comparators'/>
      <p n='version' t='version' v='3.2.2'/>
      <p n='uses:' v='org.apache.commons.collections'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.functors'/>
      <p n='version' t='version' v='3.2.2'/>
      <p n='uses:' v='org.apache.commons.collections'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.iterators'/>
      <p n='version' t='version' v='3.2.2'/>
      <p n='uses:' v='org.apache.commons.collections'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.keyvalue'/>
      <p n='version' t='version' v='3.2.2'/>
      <p n='uses:' v='org.apache.commons.collections'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.list'/>
      <p n='version' t='version' v='3.2.2'/>
      <p n='uses:' v='org.apache.commons.collections,org.apache.commons.collections.collection,org.apache.commons.collections.iterators'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.map'/>
      <p n='version' t='version' v='3.2.2'/>
      <p n='uses:' v='org.apache.commons.collections,org.apache.commons.collections.set'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.set'/>
      <p n='version' t='version' v='3.2.2'/>
      <p n='uses:' v='org.apache.commons.collections,org.apache.commons.collections.collection'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.apache.commons.collections)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.collections;resolution:=optional;version="[3.2,4)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.collections.bag)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.collections.bag;resolution:=optional;version="[3.2,4)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.collections.buffer)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.collections.buffer;resolution:=optional;version="[3.2,4)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.collections.collection)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.collections.collection;resolution:=optional;version="[3.2,4)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.collections.comparators)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.collections.comparators;resolution:=optional;version="[3.2,4)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.collections.functors)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.collections.functors;resolution:=optional;version="[3.2,4)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.collections.iterators)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.collections.iterators;resolution:=optional;version="[3.2,4)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.collections.keyvalue)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.collections.keyvalue;resolution:=optional;version="[3.2,4)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.collections.list)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.collections.list;resolution:=optional;version="[3.2,4)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.collections.map)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.collections.map;resolution:=optional;version="[3.2,4)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.collections.set)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.collections.set;resolution:=optional;version="[3.2,4)"</require>
  </resource>
  <resource id='derby/10.14.2.0' symbolicname='derby' presentationname='derby OSGi Bundle' uri='mvn:org.apache.derby/derby/10.14.2.0' version='10.14.2.0'>
    <description>This OSGi bundle simply wraps derby-10.14.2.0.jar artifact.</description>
    <size>3277255</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='derby'/>
      <p n='presentationname' v='derby OSGi Bundle'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.agg'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.authentication'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.catalog'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.sql.dictionary,org.apache.derby.iapi.store.access,org.apache.derby.vti'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.catalog.types'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.io,org.apache.derby.iapi.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.database'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.diag'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.vti'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.db'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.database,org.apache.derby.iapi.error,org.apache.derby.iapi.jdbc,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.i18n,org.apache.derby.iapi.sql.compile,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.dictionary'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.error'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.services.stream,org.apache.derby.shared.common.error'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.jdbc'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='javax.transaction.xa,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.sql,org.apache.derby.iapi.store.access.xa,org.apache.derby.iapi.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.reference'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.shared.common.reference'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.security'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='javax.security.auth,org.apache.derby.iapi.error'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.cache'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.classfile'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.compiler'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.context'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.i18n'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.crypto'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.daemon'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.dictionary'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.diag'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.i18n'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.info'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.mbeans'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.io'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.types,org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.jmx'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.mbeans'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.loader'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.locks,org.apache.derby.iapi.services.property,org.apache.derby.iapi.util,org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.locks'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.property,org.apache.derby.iapi.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.memory'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.monitor'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.info,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.services.stream,org.apache.derby.iapi.services.timer,org.apache.derby.iapi.services.uuid,org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.property'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.store.access'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.stream'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.timer'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.services.uuid'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.sql'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.sql.compile,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.depend,org.apache.derby.iapi.sql.dictionary,org.apache.derby.iapi.sql.execute,org.apache.derby.iapi.store.access,org.apache.derby.iapi.types,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.sql.compile'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.compiler,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.depend,org.apache.derby.iapi.sql.dictionary,org.apache.derby.iapi.store.access,org.apache.derby.iapi.types,org.apache.derby.iapi.util,org.apache.derby.impl.sql.compile'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.sql.conn'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.db,org.apache.derby.iapi.error,org.apache.derby.iapi.services.cache,org.apache.derby.iapi.services.compiler,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.services.property,org.apache.derby.iapi.services.uuid,org.apache.derby.iapi.sql,org.apache.derby.iapi.sql.compile,org.apache.derby.iapi.sql.depend,org.apache.derby.iapi.sql.dictionary,org.apache.derby.iapi.sql.execute,org.apache.derby.iapi.store.access,org.apache.derby.iapi.types,org.apache.derby.impl.sql.execute'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.sql.depend'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.io,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.store.access'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.sql.dictionary'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.db,org.apache.derby.iapi.error,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.uuid,org.apache.derby.iapi.sql,org.apache.derby.iapi.sql.compile,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.depend,org.apache.derby.iapi.sql.execute,org.apache.derby.iapi.store.access,org.apache.derby.iapi.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.sql.execute'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.sql,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.dictionary,org.apache.derby.iapi.sql.execute.xplain,org.apache.derby.iapi.store.access,org.apache.derby.iapi.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.sql.execute.xplain'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.sql,org.apache.derby.iapi.sql.execute'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.store.access'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.locks,org.apache.derby.iapi.services.property,org.apache.derby.iapi.store.access.conglomerate,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.types,org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.store.access.conglomerate'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.store.access.xa'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='javax.transaction.xa,org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.store.access'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.store.raw'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.locks,org.apache.derby.iapi.services.property,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.access.conglomerate,org.apache.derby.iapi.store.raw.log,org.apache.derby.iapi.store.raw.xact,org.apache.derby.iapi.types,org.apache.derby.iapi.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.store.raw.data'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.store.raw.log,org.apache.derby.iapi.store.raw.xact,org.apache.derby.iapi.util,org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.store.raw.log'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.property,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.store.raw.data,org.apache.derby.iapi.store.raw.xact,org.apache.derby.iapi.store.replication.master,org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.store.raw.xact'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.locks,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.store.raw.data,org.apache.derby.iapi.store.raw.log,org.apache.derby.iapi.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.store.replication.master'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.store.raw.data,org.apache.derby.iapi.store.raw.log'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.store.replication.slave'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.store.raw.log'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.tools.i18n'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.transaction'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.types'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='javax.xml.transform,org.apache.derby.catalog,org.apache.derby.catalog.types,org.apache.derby.iapi.error,org.apache.derby.iapi.jdbc,org.apache.derby.iapi.services.i18n,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.sql'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.iapi.util'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.sql.conn'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.db'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.db,org.apache.derby.iapi.error,org.apache.derby.iapi.jdbc,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.services.property,org.apache.derby.iapi.sql,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.dictionary,org.apache.derby.iapi.store.access,org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.io'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.io.vfmem'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.jdbc'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.db,org.apache.derby.iapi.error,org.apache.derby.iapi.jdbc,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.memory,org.apache.derby.iapi.sql,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.types,org.apache.derby.jdbc'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.jdbc.authentication'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.authentication,org.apache.derby.iapi.error,org.apache.derby.iapi.jdbc,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.services.property,org.apache.derby.iapi.store.access'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.load'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.services.bytecode'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.cache,org.apache.derby.iapi.services.compiler,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.services.cache'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.services.cache'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.services.daemon'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.db,org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.stream,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.dictionary'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.services.jce'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.crypto'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.services.jmx'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.jmx,org.apache.derby.iapi.services.monitor'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.services.jmxnone'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.services.jmx'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.services.locks'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.locks,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.services.monitor'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.info,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.services.stream,org.apache.derby.iapi.services.timer,org.apache.derby.iapi.services.uuid,org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.services.reflect'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.loader'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.services.stream'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.services.stream'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.services.timer'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.services.timer'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.services.uuid'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.uuid'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.sql'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.cache,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.services.property,org.apache.derby.iapi.sql,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.depend,org.apache.derby.iapi.sql.dictionary,org.apache.derby.iapi.sql.execute,org.apache.derby.iapi.store.access,org.apache.derby.iapi.types,org.apache.derby.impl.sql.compile,org.apache.derby.impl.sql.execute'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.sql.catalog'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.db,org.apache.derby.iapi.error,org.apache.derby.iapi.services.cache,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.locks,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.services.uuid,org.apache.derby.iapi.sql.compile,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.depend,org.apache.derby.iapi.sql.dictionary,org.apache.derby.iapi.sql.execute,org.apache.derby.iapi.store.access,org.apache.derby.iapi.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.sql.compile'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.catalog.types,org.apache.derby.iapi.error,org.apache.derby.iapi.services.compiler,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.sql,org.apache.derby.iapi.sql.compile,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.depend,org.apache.derby.iapi.sql.dictionary,org.apache.derby.iapi.sql.execute,org.apache.derby.iapi.store.access,org.apache.derby.iapi.types,org.apache.derby.iapi.util,org.apache.derby.impl.sql.execute,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.sql.conn'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.db,org.apache.derby.iapi.error,org.apache.derby.iapi.services.cache,org.apache.derby.iapi.services.compiler,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.services.property,org.apache.derby.iapi.services.uuid,org.apache.derby.iapi.sql,org.apache.derby.iapi.sql.compile,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.depend,org.apache.derby.iapi.sql.dictionary,org.apache.derby.iapi.sql.execute,org.apache.derby.iapi.store.access,org.apache.derby.iapi.types,org.apache.derby.impl.sql,org.apache.derby.impl.sql.execute'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.sql.depend'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.io,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.depend,org.apache.derby.iapi.sql.dictionary,org.apache.derby.iapi.store.access'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.sql.execute'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.agg,org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.loader,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.sql,org.apache.derby.iapi.sql.conn,org.apache.derby.iapi.sql.depend,org.apache.derby.iapi.sql.dictionary,org.apache.derby.iapi.sql.execute,org.apache.derby.iapi.sql.execute.xplain,org.apache.derby.iapi.store.access,org.apache.derby.iapi.types,org.apache.derby.impl.sql.compile,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.sql.execute.rts'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.services.io,org.apache.derby.iapi.sql.execute,org.apache.derby.iapi.sql.execute.xplain'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.sql.execute.xplain'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.sql,org.apache.derby.iapi.sql.execute,org.apache.derby.iapi.sql.execute.xplain,org.apache.derby.impl.sql.catalog'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.access'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.cache,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.locks,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.services.property,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.access.conglomerate,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.access.btree'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.io,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.access.conglomerate,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.types,org.apache.derby.impl.store.access.conglomerate'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.access.btree.index'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.access.conglomerate,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.types,org.apache.derby.impl.store.access.btree'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.access.conglomerate'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.io,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.access.conglomerate,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.access.heap'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.access.conglomerate,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.types,org.apache.derby.impl.store.access.conglomerate'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.access.sort'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.access.conglomerate,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.raw'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.locks,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.services.property,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.store.raw.data,org.apache.derby.iapi.store.raw.log,org.apache.derby.iapi.store.raw.xact,org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.raw.data'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.cache,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.locks,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.access.conglomerate,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.store.raw.data,org.apache.derby.iapi.store.raw.log,org.apache.derby.iapi.store.raw.xact,org.apache.derby.iapi.types,org.apache.derby.iapi.util,org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.raw.log'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.services.property,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.store.raw.data,org.apache.derby.iapi.store.raw.log,org.apache.derby.iapi.store.raw.xact,org.apache.derby.iapi.store.replication.master,org.apache.derby.iapi.util,org.apache.derby.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.raw.xact'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='javax.transaction.xa,org.apache.derby.catalog,org.apache.derby.iapi.error,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.daemon,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.locks,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.services.property,org.apache.derby.iapi.store.access,org.apache.derby.iapi.store.access.xa,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.store.raw.data,org.apache.derby.iapi.store.raw.log,org.apache.derby.iapi.store.raw.xact,org.apache.derby.iapi.types,org.apache.derby.iapi.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.replication'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.replication.buffer'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.store.replication.master'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.replication.master'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.store.raw.data,org.apache.derby.iapi.store.raw.log,org.apache.derby.iapi.store.replication.master,org.apache.derby.impl.store.replication,org.apache.derby.impl.store.replication.buffer,org.apache.derby.impl.store.replication.net'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.replication.net'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.store.replication.slave'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.store.raw,org.apache.derby.iapi.store.raw.log,org.apache.derby.iapi.store.replication.slave'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.impl.tools.sysinfo'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.info'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.io'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.jdbc'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='javax.naming,javax.naming.spi,javax.sql,javax.transaction.xa,org.apache.derby.iapi.error,org.apache.derby.iapi.jdbc,org.apache.derby.iapi.services.context,org.apache.derby.iapi.services.io,org.apache.derby.iapi.services.monitor,org.apache.derby.iapi.sql,org.apache.derby.iapi.store.access.xa,org.apache.derby.impl.jdbc'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.loc'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.mbeans'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.osgi'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.security'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.shared.common.error'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.shared.common.reference'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.tools'/>
      <p n='version' t='version' v='10.14.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.derby.vti'/>
      <p n='version' t='version' v='10.14.2.0'/>
      <p n='uses:' v='org.apache.derby.iapi.error,org.apache.derby.iapi.store.access,org.apache.derby.iapi.types'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.ibm.jvm))' extend='false' multiple='false' optional='true'>Import package com.ibm.jvm;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.crypto))' extend='false' multiple='false' optional='true'>Import package javax.crypto;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.crypto.spec))' extend='false' multiple='false' optional='true'>Import package javax.crypto.spec;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='true'>Import package javax.management;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming))' extend='false' multiple='false' optional='true'>Import package javax.naming;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming.directory))' extend='false' multiple='false' optional='true'>Import package javax.naming.directory;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming.spi))' extend='false' multiple='false' optional='true'>Import package javax.naming.spi;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.net))' extend='false' multiple='false' optional='true'>Import package javax.net;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.auth))' extend='false' multiple='false' optional='true'>Import package javax.security.auth;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.sql))' extend='false' multiple='false' optional='true'>Import package javax.sql;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.transaction.xa))' extend='false' multiple='false' optional='true'>Import package javax.transaction.xa;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.namespace))' extend='false' multiple='false' optional='true'>Import package javax.xml.namespace;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='true'>Import package javax.xml.parsers;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.xpath))' extend='false' multiple='false' optional='true'>Import package javax.xml.xpath;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.agg)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.agg;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.authentication)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.authentication;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.catalog)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.catalog;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.catalog.types)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.catalog.types;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.database)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.database;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.db)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.db;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.error)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.error;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.jdbc)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.jdbc;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.security)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.security;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.cache)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.cache;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.classfile)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.classfile;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.compiler)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.compiler;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.context)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.context;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.crypto)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.crypto;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.daemon)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.daemon;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.i18n)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.i18n;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.info)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.info;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.io)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.io;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.jmx)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.jmx;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.loader)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.loader;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.locks)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.locks;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.memory)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.memory;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.monitor)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.monitor;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.property)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.property;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.stream)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.stream;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.timer)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.timer;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.services.uuid)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.services.uuid;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.sql)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.sql;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.sql.compile)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.sql.compile;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.sql.conn)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.sql.conn;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.sql.depend)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.sql.depend;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.sql.dictionary)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.sql.dictionary;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.sql.execute)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.sql.execute;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.sql.execute.xplain)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.sql.execute.xplain;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.store.access)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.store.access;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.store.access.conglomerate)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.store.access.conglomerate;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.store.access.xa)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.store.access.xa;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.store.raw)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.store.raw;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.store.raw.data)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.store.raw.data;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.store.raw.log)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.store.raw.log;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.store.raw.xact)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.store.raw.xact;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.store.replication.master)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.store.replication.master;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.store.replication.slave)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.store.replication.slave;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.tools.i18n)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.tools.i18n;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.transaction)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.transaction;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.types)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.types;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.iapi.util)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.iapi.util;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.db)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.db;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.drda))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.drda;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.io.vfmem)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.io.vfmem;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.jdbc)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.jdbc;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.jdbc.authentication)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.jdbc.authentication;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.load)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.load;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.services.daemon)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.services.daemon;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.services.locks)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.services.locks;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.services.monitor)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.services.monitor;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.sql)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.sql;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.sql.catalog)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.sql.catalog;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.sql.compile)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.sql.compile;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.sql.conn)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.sql.conn;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.sql.depend)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.sql.depend;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.sql.execute)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.sql.execute;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.sql.execute.rts)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.sql.execute.rts;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.sql.execute.xplain)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.sql.execute.xplain;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.store.access)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.store.access;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.store.access.btree)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.store.access.btree;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.store.access.conglomerate)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.store.access.conglomerate;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.store.access.heap)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.store.access.heap;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.store.raw.data)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.store.raw.data;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.store.raw.log)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.store.raw.log;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.store.replication)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.store.replication;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.store.replication.buffer)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.store.replication.buffer;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.store.replication.net)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.store.replication.net;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.impl.tools.sysinfo)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.impl.tools.sysinfo;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.io)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.io;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.jdbc)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.jdbc;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.mbeans)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.mbeans;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.security)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.security;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.shared.common.error)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.shared.common.error;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.shared.common.reference)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.shared.common.reference;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.apache.derby.vti)(version&gt;=10.14.0)(!(version&gt;=11.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.derby.vti;resolution:=optional;version="[10.14,11)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework))' extend='false' multiple='false' optional='true'>Import package org.osgi.framework;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='true'>Import package org.xml.sax;resolution:=optional</require>
  </resource>
  <resource id='httpclient-osgi/4.5.14' symbolicname='httpclient-osgi' presentationname='httpclient-osgi OSGi Bundle' uri='mvn:org.apache.httpcomponents/httpclient-osgi/4.5.14' version='4.5.14'>
    <description>This OSGi bundle simply wraps httpclient-osgi-4.5.14.jar artifact.</description>
    <size>1719686</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='httpclient-osgi'/>
      <p n='presentationname' v='httpclient-osgi OSGi Bundle'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='mozilla'/>
      <p n='version' t='version' v='4.5.14'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec'/>
      <p n='version' t='version' v='4.5.14'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.binary'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.commons.codec'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.cli'/>
      <p n='version' t='version' v='4.5.14'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.digest'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='javax.crypto'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.language'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.commons.codec'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.language.bm'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.commons.codec'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.net'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.commons.codec'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='4.5.14'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging.impl'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='javax.servlet,org.apache.avalon.framework.logger,org.apache.commons.logging,org.apache.log,org.apache.log4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http.params,org.apache.http.protocol,org.apache.http.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.annotation'/>
      <p n='version' t='version' v='4.5.14'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.auth'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.config,org.apache.http.params,org.apache.http.protocol,org.ietf.jgss'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.auth.params'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http.params'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.auth,org.apache.http.client.methods,org.apache.http.conn,org.apache.http.conn.routing,org.apache.http.cookie,org.apache.http.params,org.apache.http.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.cache'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.client.protocol,org.apache.http.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.config'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.entity'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.entity'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.fluent'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.auth,org.apache.http.client,org.apache.http.concurrent,org.apache.http.conn.scheme,org.apache.http.entity,org.apache.http.impl.client'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.methods'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.client.config,org.apache.http.concurrent,org.apache.http.conn,org.apache.http.message,org.apache.http.params'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.params'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.auth.params,org.apache.http.client.config,org.apache.http.conn.params,org.apache.http.cookie.params,org.apache.http.params'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.protocol'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.auth,org.apache.http.client,org.apache.http.client.config,org.apache.http.client.entity,org.apache.http.config,org.apache.http.conn.routing,org.apache.http.cookie,org.apache.http.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.utils'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.client,org.apache.http.client.methods,org.apache.http.conn.routing,org.apache.http.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.concurrent'/>
      <p n='version' t='version' v='4.5.14'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.config'/>
      <p n='version' t='version' v='4.5.14'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='javax.net.ssl,org.apache.http,org.apache.http.concurrent,org.apache.http.config,org.apache.http.conn.routing,org.apache.http.conn.scheme,org.apache.http.entity,org.apache.http.params,org.apache.http.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn.params'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.conn.routing,org.apache.http.params'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn.routing'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn.scheme'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.conn,org.apache.http.params'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn.socket'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn.ssl'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='javax.net.ssl,org.apache.http,org.apache.http.conn,org.apache.http.conn.scheme,org.apache.http.conn.socket,org.apache.http.conn.util,org.apache.http.params,org.apache.http.protocol,org.apache.http.ssl'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn.util'/>
      <p n='version' t='version' v='4.5.14'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.cookie'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.config,org.apache.http.params,org.apache.http.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.cookie.params'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http.params'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.entity'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.entity.mime'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.entity,org.apache.http.entity.mime.content'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.entity.mime.content'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http.entity'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.config,org.apache.http.entity,org.apache.http.impl.entity,org.apache.http.io,org.apache.http.params,org.apache.http.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.auth'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.commons.logging,org.apache.http,org.apache.http.auth,org.apache.http.client,org.apache.http.params,org.apache.http.protocol,org.apache.http.util,org.ietf.jgss'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.bootstrap'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='javax.net,javax.net.ssl,org.apache.http,org.apache.http.config,org.apache.http.impl,org.apache.http.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.client'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='javax.net.ssl,org.apache.commons.logging,org.apache.http,org.apache.http.auth,org.apache.http.client,org.apache.http.client.config,org.apache.http.client.entity,org.apache.http.client.methods,org.apache.http.concurrent,org.apache.http.config,org.apache.http.conn,org.apache.http.conn.routing,org.apache.http.conn.socket,org.apache.http.conn.ssl,org.apache.http.conn.util,org.apache.http.cookie,org.apache.http.impl,org.apache.http.impl.auth,org.apache.http.impl.execchain,org.apache.http.message,org.apache.http.params,org.apache.http.pool,org.apache.http.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.client.cache'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.client,org.apache.http.client.cache,org.apache.http.client.methods,org.apache.http.client.protocol,org.apache.http.conn,org.apache.http.conn.routing,org.apache.http.impl.client,org.apache.http.impl.execchain,org.apache.http.params,org.apache.http.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.client.cache.ehcache'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='net.sf.ehcache,org.apache.http.client.cache,org.apache.http.impl.client.cache'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.client.cache.memcached'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='net.spy.memcached,org.apache.http.client.cache,org.apache.http.impl.client.cache'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.conn'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='javax.net.ssl,org.apache.commons.logging,org.apache.http,org.apache.http.config,org.apache.http.conn,org.apache.http.conn.routing,org.apache.http.conn.scheme,org.apache.http.conn.socket,org.apache.http.entity,org.apache.http.impl,org.apache.http.impl.io,org.apache.http.io,org.apache.http.message,org.apache.http.params,org.apache.http.pool,org.apache.http.protocol,org.apache.http.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.conn.tsccm'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http.conn,org.apache.http.conn.params,org.apache.http.conn.routing,org.apache.http.conn.scheme,org.apache.http.impl.conn,org.apache.http.params'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.cookie'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.conn.util,org.apache.http.cookie,org.apache.http.message,org.apache.http.params,org.apache.http.protocol,org.apache.http.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.entity'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.entity,org.apache.http.io'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.execchain'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.client,org.apache.http.client.methods,org.apache.http.client.protocol,org.apache.http.conn,org.apache.http.conn.routing,org.apache.http.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.io'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.config,org.apache.http.io,org.apache.http.message,org.apache.http.params,org.apache.http.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.pool'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='javax.net,javax.net.ssl,org.apache.http,org.apache.http.config,org.apache.http.params,org.apache.http.pool'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.io'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.config,org.apache.http.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.message'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.params,org.apache.http.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.osgi.impl'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http.impl.client,org.apache.http.osgi.services,org.osgi.framework,org.osgi.service.cm'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.osgi.services'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http.impl.client,org.apache.http.impl.client.cache'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.params'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.config'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.pool'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http.concurrent'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.protocol'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http,org.apache.http.params'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.ssl'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='javax.net.ssl'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.util'/>
      <p n='version' t='version' v='4.5.14'/>
      <p n='uses:' v='org.apache.http'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.crypto))' extend='false' multiple='false' optional='true'>Import package javax.crypto;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.crypto.spec))' extend='false' multiple='false' optional='true'>Import package javax.crypto.spec;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming))' extend='false' multiple='false' optional='true'>Import package javax.naming;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming.directory))' extend='false' multiple='false' optional='true'>Import package javax.naming.directory;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming.ldap))' extend='false' multiple='false' optional='true'>Import package javax.naming.ldap;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.net))' extend='false' multiple='false' optional='true'>Import package javax.net;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='true'>Import package javax.net.ssl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.x500))' extend='false' multiple='false' optional='true'>Import package javax.security.auth.x500;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='true'>Import package javax.servlet;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=net.sf.ehcache))' extend='false' multiple='false' optional='true'>Import package net.sf.ehcache;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=net.spy.memcached))' extend='false' multiple='false' optional='true'>Import package net.spy.memcached;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.avalon.framework.logger))' extend='false' multiple='false' optional='true'>Import package org.apache.avalon.framework.logger;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.codec)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.codec;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.codec.binary)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.codec.binary;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.codec.digest)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.codec.digest;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.logging;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging.impl)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.logging.impl;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.auth)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.auth;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.auth.params)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.auth.params;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.client)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.client;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.client.cache)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.client.cache;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.client.config)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.client.config;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.client.entity)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.client.entity;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.client.methods)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.client.methods;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.client.params)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.client.params;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.client.protocol)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.client.protocol;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.client.utils)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.client.utils;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.concurrent)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.concurrent;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.config)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.config;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.conn)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.conn;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.conn.params)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.conn.params;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.conn.routing)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.conn.routing;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.conn.scheme)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.conn.scheme;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.conn.socket)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.conn.socket;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.conn.ssl)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.conn.ssl;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.conn.util)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.conn.util;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.cookie)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.cookie;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.cookie.params)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.cookie.params;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.entity)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.entity;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.entity.mime.content)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.entity.mime.content;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.impl)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.impl;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.impl.auth)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.impl.auth;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.impl.client)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.impl.client;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.impl.client.cache)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.impl.client.cache;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.impl.conn)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.impl.conn;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.impl.cookie)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.impl.cookie;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.impl.entity)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.impl.entity;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.impl.execchain)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.impl.execchain;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.impl.io)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.impl.io;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.io)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.io;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.message)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.message;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.osgi.services)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.osgi.services;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.params)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.params;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.pool)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.pool;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.protocol)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.protocol;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.ssl)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.ssl;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.http.util)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.http.util;resolution:=optional;version="[4.5,5)"</require>
    <require name='package' filter='(&amp;(package=org.apache.log))' extend='false' multiple='false' optional='true'>Import package org.apache.log;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='true'>Import package org.apache.log4j;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ietf.jgss))' extend='false' multiple='false' optional='true'>Import package org.ietf.jgss;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework))' extend='false' multiple='false' optional='true'>Import package org.osgi.framework;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.cm;resolution:=optional</require>
  </resource>
  <resource id='jakarta.activation/1.2.2' symbolicname='jakarta.activation' presentationname='jakarta.activation OSGi Bundle' uri='mvn:com.sun.activation/jakarta.activation/1.2.2' version='1.2.2'>
    <description>This OSGi bundle simply wraps jakarta.activation-1.2.2.jar artifact.</description>
    <size>66114</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='jakarta.activation'/>
      <p n='presentationname' v='jakarta.activation OSGi Bundle'/>
      <p n='version' t='version' v='1.2.2'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.activation.registries'/>
      <p n='version' t='version' v='1.2.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.activation.viewers'/>
      <p n='version' t='version' v='1.2.2'/>
      <p n='uses:' v='javax.activation'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.activation'/>
      <p n='version' t='version' v='1.2.2'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.sun.activation.registries)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.activation.registries;resolution:=optional;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=javax.activation)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package javax.activation;resolution:=optional;version="[1.2,2)"</require>
  </resource>
  <resource id='jakarta.activation-api/1.2.2' symbolicname='jakarta.activation-api' presentationname='jakarta.activation-api OSGi Bundle' uri='mvn:jakarta.activation/jakarta.activation-api/1.2.2' version='1.2.2'>
    <description>This OSGi bundle simply wraps jakarta.activation-api-1.2.2.jar artifact.</description>
    <size>44927</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='jakarta.activation-api'/>
      <p n='presentationname' v='jakarta.activation-api OSGi Bundle'/>
      <p n='version' t='version' v='1.2.2'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.activation'/>
      <p n='version' t='version' v='1.2.2'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.sun.activation.registries))' extend='false' multiple='false' optional='true'>Import package com.sun.activation.registries;resolution:=optional</require>
  </resource>
  <resource id='jakarta.xml.bind-api/2.3.3' symbolicname='jakarta.xml.bind-api' presentationname='jakarta.xml.bind-api OSGi Bundle' uri='mvn:jakarta.xml.bind/jakarta.xml.bind-api/2.3.3' version='2.3.3'>
    <description>This OSGi bundle simply wraps jakarta.xml.bind-api-2.3.3.jar artifact.</description>
    <size>154220</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='jakarta.xml.bind-api'/>
      <p n='presentationname' v='jakarta.xml.bind-api OSGi Bundle'/>
      <p n='version' t='version' v='2.3.3'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.activation'/>
      <p n='version' t='version' v='2.3.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind'/>
      <p n='version' t='version' v='2.3.3'/>
      <p n='uses:' v='javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.namespace,javax.xml.stream,javax.xml.transform,javax.xml.validation,org.w3c.dom,org.xml.sax'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.annotation'/>
      <p n='version' t='version' v='2.3.3'/>
      <p n='uses:' v='javax.xml.bind,javax.xml.parsers,javax.xml.transform,javax.xml.transform.dom,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.annotation.adapters'/>
      <p n='version' t='version' v='2.3.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.attachment'/>
      <p n='version' t='version' v='2.3.3'/>
      <p n='uses:' v='javax.activation'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.helpers'/>
      <p n='version' t='version' v='2.3.3'/>
      <p n='uses:' v='javax.xml.bind,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.stream,javax.xml.transform,javax.xml.validation,org.w3c.dom,org.xml.sax'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.util'/>
      <p n='version' t='version' v='2.3.3'/>
      <p n='uses:' v='javax.xml.bind,javax.xml.transform.sax'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.sun.activation.registries))' extend='false' multiple='false' optional='true'>Import package com.sun.activation.registries;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.activation)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='true'>Import package javax.activation;resolution:=optional;version="[2.3,3)"</require>
    <require name='package' filter='(&amp;(package=javax.xml.bind)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='true'>Import package javax.xml.bind;resolution:=optional;version="[2.3,3)"</require>
    <require name='package' filter='(&amp;(package=javax.xml.bind.annotation)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='true'>Import package javax.xml.bind.annotation;resolution:=optional;version="[2.3,3)"</require>
    <require name='package' filter='(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='true'>Import package javax.xml.bind.annotation.adapters;resolution:=optional;version="[2.3,3)"</require>
    <require name='package' filter='(&amp;(package=javax.xml.bind.attachment)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='true'>Import package javax.xml.bind.attachment;resolution:=optional;version="[2.3,3)"</require>
    <require name='package' filter='(&amp;(package=javax.xml.datatype))' extend='false' multiple='false' optional='true'>Import package javax.xml.datatype;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.namespace))' extend='false' multiple='false' optional='true'>Import package javax.xml.namespace;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='true'>Import package javax.xml.parsers;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.stream))' extend='false' multiple='false' optional='true'>Import package javax.xml.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.sax))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.sax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.validation))' extend='false' multiple='false' optional='true'>Import package javax.xml.validation;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.glassfish.hk2.osgiresourcelocator))' extend='false' multiple='false' optional='true'>Import package org.glassfish.hk2.osgiresourcelocator;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='true'>Import package org.xml.sax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax.ext))' extend='false' multiple='false' optional='true'>Import package org.xml.sax.ext;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax.helpers))' extend='false' multiple='false' optional='true'>Import package org.xml.sax.helpers;resolution:=optional</require>
  </resource>
  <resource id='jakarta.xml.soap-api/1.4.1' symbolicname='jakarta.xml.soap-api' presentationname='jakarta.xml.soap-api OSGi Bundle' uri='mvn:jakarta.xml.soap/jakarta.xml.soap-api/1.4.1' version='1.4.1'>
    <description>This OSGi bundle simply wraps jakarta.xml.soap-api-1.4.1.jar artifact.</description>
    <size>73949</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='jakarta.xml.soap-api'/>
      <p n='presentationname' v='jakarta.xml.soap-api OSGi Bundle'/>
      <p n='version' t='version' v='1.4.1'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.activation'/>
      <p n='version' t='version' v='1.4.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.soap'/>
      <p n='version' t='version' v='1.4.1'/>
      <p n='uses:' v='javax.activation,javax.xml.namespace,javax.xml.transform,javax.xml.transform.dom,org.w3c.dom'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.sun.activation.registries))' extend='false' multiple='false' optional='true'>Import package com.sun.activation.registries;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.activation)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package javax.activation;resolution:=optional;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=javax.xml.namespace))' extend='false' multiple='false' optional='true'>Import package javax.xml.namespace;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom;resolution:=optional</require>
  </resource>
  <resource id='json/20230227.0.0' symbolicname='json' presentationname='json OSGi Bundle' uri='mvn:org.json/json/20230227' version='20230227.0.0'>
    <description>This OSGi bundle simply wraps json-20230227.jar artifact.</description>
    <size>71665</size>
    <documentation>http://json.org/</documentation>
    <license>http://www.json.org/license.htm</license>
    <capability name='bundle'>
      <p n='symbolicname' v='json'/>
      <p n='presentationname' v='json OSGi Bundle'/>
      <p n='version' t='version' v='20230227.0.0'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.json'/>
      <p n='version' t='version' v='20230227.0.0'/>
    </capability>
  </resource>
  <resource id='javax.mail/1.4.4' symbolicname='javax.mail' presentationname='mail OSGi Bundle' uri='mvn:javax.mail/mail/1.4.4' version='1.4.4'>
    <description>This OSGi bundle simply wraps mail-1.4.4.jar artifact.</description>
    <size>484084</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='javax.mail'/>
      <p n='presentationname' v='mail OSGi Bundle'/>
      <p n='version' t='version' v='1.4.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail'/>
      <p n='version' t='version' v='1.4.4'/>
      <p n='uses:' v='javax.activation,javax.mail.event,javax.mail.search'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail.event'/>
      <p n='version' t='version' v='1.4.4'/>
      <p n='uses:' v='javax.mail'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail.internet'/>
      <p n='version' t='version' v='1.4.4'/>
      <p n='uses:' v='javax.activation,javax.mail'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail.search'/>
      <p n='version' t='version' v='1.4.4'/>
      <p n='uses:' v='javax.mail'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail.util'/>
      <p n='version' t='version' v='1.4.4'/>
      <p n='uses:' v='javax.activation,javax.mail.internet'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.activation))' extend='false' multiple='false' optional='true'>Import package javax.activation;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.crypto))' extend='false' multiple='false' optional='true'>Import package javax.crypto;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.crypto.spec))' extend='false' multiple='false' optional='true'>Import package javax.crypto.spec;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.mail.event)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package javax.mail.event;resolution:=optional;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=javax.mail.search)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package javax.mail.search;resolution:=optional;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=javax.mail.util)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package javax.mail.util;resolution:=optional;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=javax.net))' extend='false' multiple='false' optional='true'>Import package javax.net;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='true'>Import package javax.net.ssl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.callback))' extend='false' multiple='false' optional='true'>Import package javax.security.auth.callback;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.x500))' extend='false' multiple='false' optional='true'>Import package javax.security.auth.x500;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.sasl))' extend='false' multiple='false' optional='true'>Import package javax.security.sasl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=sun.security.util))' extend='false' multiple='false' optional='true'>Import package sun.security.util;resolution:=optional</require>
  </resource>
  <resource id='mimepull/1.10.0' symbolicname='mimepull' presentationname='mimepull OSGi Bundle' uri='mvn:org.jvnet.mimepull/mimepull/1.10.0' version='1.10.0'>
    <description>This OSGi bundle simply wraps mimepull-1.10.0.jar artifact.</description>
    <size>60611</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='mimepull'/>
      <p n='presentationname' v='mimepull OSGi Bundle'/>
      <p n='version' t='version' v='1.10.0'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jvnet.mimepull'/>
      <p n='version' t='version' v='1.10.0'/>
    </capability>
  </resource>
  <resource id='mongo-java-driver/3.12.12' symbolicname='mongo-java-driver' presentationname='mongo-java-driver OSGi Bundle' uri='mvn:org.mongodb/mongo-java-driver/3.12.12' version='3.12.12'>
    <description>This OSGi bundle simply wraps mongo-java-driver-3.12.12.jar artifact.</description>
    <size>2345828</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='mongo-java-driver'/>
      <p n='presentationname' v='mongo-java-driver OSGi Bundle'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.annotations,com.mongodb.bulk,com.mongodb.client,com.mongodb.client.model,com.mongodb.connection,com.mongodb.event,com.mongodb.lang,com.mongodb.selector,javax.net,javax.net.ssl,org.bson,org.bson.codecs,org.bson.codecs.configuration,org.bson.codecs.pojo.annotations,org.bson.conversions,org.bson.io,org.bson.json,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.annotations'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.assertions'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.async'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.async'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.binding'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.async,com.mongodb.connection,com.mongodb.internal.binding,com.mongodb.session'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.bulk'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.client.model,org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.client'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.annotations,com.mongodb.bulk,com.mongodb.client.model,com.mongodb.client.model.changestream,com.mongodb.client.result,com.mongodb.connection,com.mongodb.lang,com.mongodb.session,javax.naming,javax.naming.spi,org.bson,org.bson.codecs.configuration,org.bson.conversions'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.client.gridfs'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.annotations,com.mongodb.client,com.mongodb.client.gridfs.model,com.mongodb.client.model,com.mongodb.lang,org.bson,org.bson.conversions,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.client.gridfs.codecs'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.client.gridfs.model,org.bson,org.bson.codecs,org.bson.codecs.configuration'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.client.gridfs.model'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.lang,org.bson,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.client.internal'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.binding,com.mongodb.client,com.mongodb.client.model,com.mongodb.client.model.changestream,com.mongodb.client.model.vault,com.mongodb.client.vault,com.mongodb.connection,com.mongodb.internal.binding,com.mongodb.internal.session,com.mongodb.lang,com.mongodb.operation,com.mongodb.session,org.bson,org.bson.codecs,org.bson.codecs.configuration,org.bson.conversions'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.client.jndi'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='javax.naming,javax.naming.spi'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.client.model'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.annotations,com.mongodb.client.model.geojson,com.mongodb.lang,org.bson,org.bson.conversions'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.client.model.changestream'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.lang,org.bson,org.bson.codecs,org.bson.codecs.configuration,org.bson.codecs.pojo.annotations'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.client.model.geojson'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.annotations,com.mongodb.lang'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.client.model.geojson.codecs'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.client.model.geojson,org.bson,org.bson.codecs,org.bson.codecs.configuration'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.client.model.vault'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.client.result'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.lang,org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.client.vault'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.client.model.vault,org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.connection'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.annotations,com.mongodb.async,com.mongodb.binding,com.mongodb.bulk,com.mongodb.event,com.mongodb.internal.connection,com.mongodb.internal.connection.tlschannel.async,com.mongodb.lang,com.mongodb.selector,com.mongodb.session,javax.net,javax.net.ssl,org.bson,org.bson.codecs,org.bson.io,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.connection.netty'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.connection,io.netty.buffer,io.netty.channel,io.netty.channel.socket'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.diagnostics.logging'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.event'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.annotations,com.mongodb.connection,org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.gridfs'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,org.bson,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.async'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.async,com.mongodb.diagnostics.logging'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.authentication'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.binding'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.async,com.mongodb.binding,com.mongodb.connection'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.build'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.capi'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.crypt.capi,org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.client.model'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.client.model'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.connection'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.annotations,com.mongodb.async,com.mongodb.binding,com.mongodb.bulk,com.mongodb.connection,com.mongodb.event,com.mongodb.selector,com.mongodb.session,javax.net,javax.net.ssl,org.bson,org.bson.codecs,org.bson.io,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.connection.tlschannel'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='javax.net.ssl,org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.connection.tlschannel.async'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.internal.connection,com.mongodb.internal.connection.tlschannel'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.connection.tlschannel.impl'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.internal.connection.tlschannel,javax.net.ssl'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.connection.tlschannel.util'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='javax.net.ssl'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.dns'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.event'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.connection,com.mongodb.event'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.management.jmx'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.management'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.operation'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.async,com.mongodb.bulk,com.mongodb.client.model,com.mongodb.connection,com.mongodb.internal.client.model,com.mongodb.operation,org.bson,org.bson.codecs.configuration,org.bson.conversions'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.session'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.connection,com.mongodb.lang,com.mongodb.session,org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.thread'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.internal.validator'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.lang'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='javax.annotation,javax.annotation.meta'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.management'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb.event'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.operation'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.annotations,com.mongodb.async,com.mongodb.binding,com.mongodb.bulk,com.mongodb.client.model,com.mongodb.client.model.changestream,com.mongodb.connection,com.mongodb.internal.client.model,com.mongodb.lang,com.mongodb.session,org.bson,org.bson.codecs'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.selector'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.annotations,com.mongodb.connection'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.session'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='com.mongodb,com.mongodb.annotations,com.mongodb.lang,org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mongodb.util'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson.codecs,org.bson.codecs.configuration,org.bson.conversions,org.bson.io,org.bson.json,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.assertions'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.codecs'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.codecs.configuration,org.bson.conversions,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.codecs.configuration'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson.codecs'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.codecs.jsr310'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.codecs,org.bson.codecs.configuration'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.codecs.pojo'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.codecs,org.bson.codecs.configuration,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.codecs.pojo.annotations'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.conversions'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.codecs.configuration'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.diagnostics'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.internal'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.codecs,org.bson.codecs.configuration'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.io'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.json'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson,org.bson.types'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.types'/>
      <p n='version' t='version' v='3.12.12'/>
      <p n='uses:' v='org.bson'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.bson.util'/>
      <p n='version' t='version' v='3.12.12'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.github.luben.zstd))' extend='false' multiple='false' optional='true'>Import package com.github.luben.zstd;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.mongodb)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.annotations)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.annotations;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.assertions)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.assertions;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.async)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.async;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.binding)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.binding;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.bulk)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.bulk;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.client)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.client;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.client.gridfs.codecs)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.client.gridfs.codecs;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.client.gridfs.model)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.client.gridfs.model;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.client.internal)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.client.internal;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.client.model)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.client.model;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.client.model.changestream)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.client.model.changestream;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.client.model.geojson)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.client.model.geojson;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.client.model.geojson.codecs)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.client.model.geojson.codecs;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.client.model.vault)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.client.model.vault;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.client.result)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.client.result;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.client.vault)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.client.vault;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.connection)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.connection;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.crypt.capi))' extend='false' multiple='false' optional='true'>Import package com.mongodb.crypt.capi;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.mongodb.diagnostics.logging)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.diagnostics.logging;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.event)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.event;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.async)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.async;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.authentication)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.authentication;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.binding)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.binding;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.capi)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.capi;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.client.model)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.client.model;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.connection)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.connection;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.connection.tlschannel)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.connection.tlschannel;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.connection.tlschannel.async)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.connection.tlschannel.async;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.connection.tlschannel.impl)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.connection.tlschannel.impl;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.connection.tlschannel.util)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.connection.tlschannel.util;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.dns)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.dns;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.event)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.event;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.management.jmx)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.management.jmx;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.operation)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.operation;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.session)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.session;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.thread)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.thread;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.internal.validator)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.internal.validator;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.lang)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.lang;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.management)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.management;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.operation)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.operation;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.selector)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.selector;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.session)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.session;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=com.mongodb.util)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mongodb.util;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=io.netty.bootstrap))' extend='false' multiple='false' optional='true'>Import package io.netty.bootstrap;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=io.netty.buffer))' extend='false' multiple='false' optional='true'>Import package io.netty.buffer;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=io.netty.channel))' extend='false' multiple='false' optional='true'>Import package io.netty.channel;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=io.netty.channel.nio))' extend='false' multiple='false' optional='true'>Import package io.netty.channel.nio;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=io.netty.channel.socket))' extend='false' multiple='false' optional='true'>Import package io.netty.channel.socket;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=io.netty.channel.socket.nio))' extend='false' multiple='false' optional='true'>Import package io.netty.channel.socket.nio;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=io.netty.handler.ssl))' extend='false' multiple='false' optional='true'>Import package io.netty.handler.ssl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=io.netty.handler.timeout))' extend='false' multiple='false' optional='true'>Import package io.netty.handler.timeout;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=io.netty.util.concurrent))' extend='false' multiple='false' optional='true'>Import package io.netty.util.concurrent;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.annotation))' extend='false' multiple='false' optional='true'>Import package javax.annotation;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.annotation.meta))' extend='false' multiple='false' optional='true'>Import package javax.annotation.meta;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.crypto))' extend='false' multiple='false' optional='true'>Import package javax.crypto;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.crypto.spec))' extend='false' multiple='false' optional='true'>Import package javax.crypto.spec;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='true'>Import package javax.management;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming))' extend='false' multiple='false' optional='true'>Import package javax.naming;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming.directory))' extend='false' multiple='false' optional='true'>Import package javax.naming.directory;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming.spi))' extend='false' multiple='false' optional='true'>Import package javax.naming.spi;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.net))' extend='false' multiple='false' optional='true'>Import package javax.net;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='true'>Import package javax.net.ssl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.auth))' extend='false' multiple='false' optional='true'>Import package javax.security.auth;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.callback))' extend='false' multiple='false' optional='true'>Import package javax.security.auth.callback;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.sasl))' extend='false' multiple='false' optional='true'>Import package javax.security.sasl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.bind))' extend='false' multiple='false' optional='true'>Import package javax.xml.bind;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=jnr.unixsocket))' extend='false' multiple='false' optional='true'>Import package jnr.unixsocket;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.bson)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.assertions)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.assertions;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.codecs)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.codecs;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.codecs.configuration)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.codecs.configuration;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.codecs.jsr310)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.codecs.jsr310;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.codecs.pojo)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.codecs.pojo;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.codecs.pojo.annotations)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.codecs.pojo.annotations;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.conversions)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.conversions;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.diagnostics)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.diagnostics;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.internal)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.internal;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.io)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.io;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.json)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.json;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.types)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.types;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.bson.util)(version&gt;=3.12.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.bson.util;resolution:=optional;version="[3.12,4)"</require>
    <require name='package' filter='(&amp;(package=org.ietf.jgss))' extend='false' multiple='false' optional='true'>Import package org.ietf.jgss;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.slf4j))' extend='false' multiple='false' optional='true'>Import package org.slf4j;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xerial.snappy))' extend='false' multiple='false' optional='true'>Import package org.xerial.snappy;resolution:=optional</require>
  </resource>
  <resource id='mysql-connector-j/8.0.32' symbolicname='mysql-connector-j' presentationname='mysql-connector-j OSGi Bundle' uri='mvn:com.mysql/mysql-connector-j/8.0.32' version='8.0.32'>
    <description>This OSGi bundle simply wraps mysql-connector-j-8.0.32.jar artifact.</description>
    <size>4148284</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='mysql-connector-j'/>
      <p n='presentationname' v='mysql-connector-j OSGi Bundle'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.protobuf'/>
      <p n='version' t='version' v='8.0.32'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.protobuf.compiler'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.google.protobuf'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj.conf,com.mysql.cj.exceptions,com.mysql.cj.interceptors,com.mysql.cj.log,com.mysql.cj.protocol,com.mysql.cj.protocol.a,com.mysql.cj.protocol.x,com.mysql.cj.result,com.mysql.cj.xdevapi'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.admin'/>
      <p n='version' t='version' v='8.0.32'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.callback'/>
      <p n='version' t='version' v='8.0.32'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.conf'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj.exceptions,javax.naming'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.conf.url'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj.conf'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.configurations'/>
      <p n='version' t='version' v='8.0.32'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.exceptions'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj.conf,com.mysql.cj.log,com.mysql.cj.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.interceptors'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj,com.mysql.cj.log,com.mysql.cj.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.jdbc'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj,com.mysql.cj.conf,com.mysql.cj.exceptions,com.mysql.cj.interceptors,com.mysql.cj.jdbc.ha,com.mysql.cj.jdbc.result,com.mysql.cj.protocol,com.mysql.cj.protocol.a,com.mysql.cj.result,com.mysql.cj.util,javax.naming,javax.naming.spi,javax.sql,javax.transaction.xa,javax.xml.transform'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.jdbc.admin'/>
      <p n='version' t='version' v='8.0.32'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.jdbc.exceptions'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj.exceptions,com.mysql.cj.jdbc,com.mysql.cj.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.jdbc.ha'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj,com.mysql.cj.conf,com.mysql.cj.exceptions,com.mysql.cj.interceptors,com.mysql.cj.jdbc,com.mysql.cj.jdbc.result,com.mysql.cj.log,com.mysql.cj.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.jdbc.integration.c3p0'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mchange.v2.c3p0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.jdbc.interceptors'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj,com.mysql.cj.interceptors,com.mysql.cj.log,com.mysql.cj.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.jdbc.jmx'/>
      <p n='version' t='version' v='8.0.32'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.jdbc.result'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj,com.mysql.cj.conf,com.mysql.cj.exceptions,com.mysql.cj.jdbc,com.mysql.cj.log,com.mysql.cj.protocol,com.mysql.cj.protocol.a,com.mysql.cj.protocol.a.result,com.mysql.cj.result'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.jdbc.util'/>
      <p n='version' t='version' v='8.0.32'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.log'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj,com.mysql.cj.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.protocol'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj,com.mysql.cj.callback,com.mysql.cj.conf,com.mysql.cj.exceptions,com.mysql.cj.log,com.mysql.cj.result,javax.net.ssl'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.protocol.a'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj,com.mysql.cj.conf,com.mysql.cj.exceptions,com.mysql.cj.interceptors,com.mysql.cj.log,com.mysql.cj.protocol,com.mysql.cj.result,com.mysql.cj.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.protocol.a.authentication'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj.callback,com.mysql.cj.conf,com.mysql.cj.exceptions,com.mysql.cj.protocol,com.mysql.cj.protocol.a'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.protocol.a.result'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj.exceptions,com.mysql.cj.protocol,com.mysql.cj.protocol.a,com.mysql.cj.protocol.result,com.mysql.cj.result'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.protocol.result'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj.exceptions,com.mysql.cj.protocol,com.mysql.cj.result'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.protocol.x'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.google.protobuf,com.mysql.cj,com.mysql.cj.conf,com.mysql.cj.exceptions,com.mysql.cj.protocol,com.mysql.cj.result,com.mysql.cj.x.protobuf,com.mysql.cj.xdevapi'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.result'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj,com.mysql.cj.conf,com.mysql.cj.protocol,com.mysql.cj.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.sasl'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='javax.security.auth.callback,javax.security.sasl'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.util'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj,com.mysql.cj.exceptions,javax.naming'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.x.protobuf'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.google.protobuf'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.cj.xdevapi'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj,com.mysql.cj.conf,com.mysql.cj.exceptions,com.mysql.cj.protocol,com.mysql.cj.protocol.x,com.mysql.cj.result,com.mysql.cj.x.protobuf'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.mysql.jdbc'/>
      <p n='version' t='version' v='8.0.32'/>
      <p n='uses:' v='com.mysql.cj.conf,com.mysql.cj.jdbc,com.mysql.cj.log,com.mysql.cj.protocol'/>
    </capability>
    <capability name='package'>
      <p n='package' v='google.protobuf'/>
      <p n='version' t='version' v='8.0.32'/>
    </capability>
    <capability name='package'>
      <p n='package' v='google.protobuf.compiler'/>
      <p n='version' t='version' v='8.0.32'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.google.protobuf)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.google.protobuf;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mchange.v2.c3p0))' extend='false' multiple='false' optional='true'>Import package com.mchange.v2.c3p0;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.callback)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.callback;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.conf)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.conf;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.conf.url)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.conf.url;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.exceptions)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.exceptions;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.interceptors)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.interceptors;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.jdbc)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.jdbc;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.jdbc.exceptions)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.jdbc.exceptions;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.jdbc.ha)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.jdbc.ha;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.jdbc.interceptors)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.jdbc.interceptors;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.jdbc.jmx)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.jdbc.jmx;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.jdbc.result)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.jdbc.result;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.log)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.log;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.protocol)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.protocol;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.protocol.a)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.protocol.a;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.protocol.a.authentication)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.protocol.a.authentication;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.protocol.a.result)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.protocol.a.result;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.protocol.result)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.protocol.result;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.protocol.x)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.protocol.x;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.result)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.result;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.sasl)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.sasl;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.util)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.util;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.x.protobuf)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.x.protobuf;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.cj.xdevapi)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.cj.xdevapi;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.mysql.jdbc)(version&gt;=8.0.0)(!(version&gt;=9.0.0)))' extend='false' multiple='false' optional='true'>Import package com.mysql.jdbc;resolution:=optional;version="[8.0,9)"</require>
    <require name='package' filter='(&amp;(package=com.oracle.bmc))' extend='false' multiple='false' optional='true'>Import package com.oracle.bmc;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.crypto))' extend='false' multiple='false' optional='true'>Import package javax.crypto;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.crypto.spec))' extend='false' multiple='false' optional='true'>Import package javax.crypto.spec;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='true'>Import package javax.management;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming))' extend='false' multiple='false' optional='true'>Import package javax.naming;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming.directory))' extend='false' multiple='false' optional='true'>Import package javax.naming.directory;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming.ldap))' extend='false' multiple='false' optional='true'>Import package javax.naming.ldap;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming.spi))' extend='false' multiple='false' optional='true'>Import package javax.naming.spi;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='true'>Import package javax.net.ssl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.auth))' extend='false' multiple='false' optional='true'>Import package javax.security.auth;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.callback))' extend='false' multiple='false' optional='true'>Import package javax.security.auth.callback;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.login))' extend='false' multiple='false' optional='true'>Import package javax.security.auth.login;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.x500))' extend='false' multiple='false' optional='true'>Import package javax.security.auth.x500;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.security.sasl))' extend='false' multiple='false' optional='true'>Import package javax.security.sasl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.sql))' extend='false' multiple='false' optional='true'>Import package javax.sql;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.transaction.xa))' extend='false' multiple='false' optional='true'>Import package javax.transaction.xa;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='true'>Import package javax.xml.parsers;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.stream))' extend='false' multiple='false' optional='true'>Import package javax.xml.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.sax))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.sax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stax))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.stax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.slf4j))' extend='false' multiple='false' optional='true'>Import package org.slf4j;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='true'>Import package org.xml.sax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax.helpers))' extend='false' multiple='false' optional='true'>Import package org.xml.sax.helpers;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=sun.misc))' extend='false' multiple='false' optional='true'>Import package sun.misc;resolution:=optional</require>
  </resource>
  <resource id='com.sun.xml.messaging.saaj.impl/1.5.1' symbolicname='com.sun.xml.messaging.saaj.impl' presentationname='saaj-impl OSGi Bundle' uri='mvn:com.sun.xml.messaging.saaj/saaj-impl/1.5.1' version='1.5.1'>
    <description>This OSGi bundle simply wraps saaj-impl-1.5.1.jar artifact.</description>
    <size>451257</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='com.sun.xml.messaging.saaj.impl'/>
      <p n='presentationname' v='saaj-impl OSGi Bundle'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='uses:' v='javax.xml.namespace,javax.xml.soap,javax.xml.stream,javax.xml.transform'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj.client.p2p'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='uses:' v='javax.xml.soap'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj.packaging.mime'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='uses:' v='com.sun.xml.messaging.saaj.packaging.mime.internet,javax.activation'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj.packaging.mime.internet'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='uses:' v='com.sun.xml.messaging.saaj.packaging.mime,com.sun.xml.messaging.saaj.util,javax.activation,org.jvnet.mimepull'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj.packaging.mime.util'/>
      <p n='version' t='version' v='1.5.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj.soap'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='uses:' v='com.sun.xml.messaging.saaj,com.sun.xml.messaging.saaj.packaging.mime.internet,com.sun.xml.messaging.saaj.util,com.sun.xml.messaging.saaj.util.stax,javax.activation,javax.xml.namespace,javax.xml.soap,javax.xml.stream,javax.xml.transform,org.jvnet.mimepull,org.jvnet.staxex.util,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj.soap.dynamic'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='uses:' v='com.sun.xml.messaging.saaj.soap,javax.xml.soap'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj.soap.impl'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='uses:' v='com.sun.xml.messaging.saaj.soap,com.sun.xml.messaging.saaj.soap.name,com.sun.xml.messaging.saaj.util,javax.xml.namespace,javax.xml.soap,javax.xml.stream,javax.xml.transform,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj.soap.name'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='uses:' v='javax.xml.namespace,javax.xml.soap,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj.soap.ver1_1'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='uses:' v='com.sun.xml.messaging.saaj,com.sun.xml.messaging.saaj.packaging.mime.internet,com.sun.xml.messaging.saaj.soap,com.sun.xml.messaging.saaj.soap.impl,com.sun.xml.messaging.saaj.soap.name,javax.xml.namespace,javax.xml.soap,javax.xml.stream,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj.soap.ver1_2'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='uses:' v='com.sun.xml.messaging.saaj,com.sun.xml.messaging.saaj.packaging.mime.internet,com.sun.xml.messaging.saaj.soap,com.sun.xml.messaging.saaj.soap.impl,com.sun.xml.messaging.saaj.soap.name,javax.xml.namespace,javax.xml.soap,javax.xml.stream,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj.util'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='uses:' v='javax.xml.parsers,javax.xml.soap,javax.xml.transform,javax.xml.transform.stream,org.w3c.dom,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj.util.stax'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='uses:' v='com.sun.xml.messaging.saaj.soap.impl,javax.activation,javax.xml.bind.attachment,javax.xml.namespace,javax.xml.soap,javax.xml.stream,org.jvnet.staxex,org.jvnet.staxex.util,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.messaging.saaj.util.transform'/>
      <p n='version' t='version' v='1.5.1'/>
      <p n='uses:' v='javax.xml.transform'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.sun.xml.fastinfoset.dom))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.fastinfoset.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.messaging.saaj)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.messaging.saaj;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.messaging.saaj.packaging.mime)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.messaging.saaj.packaging.mime;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.messaging.saaj.packaging.mime.internet)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.messaging.saaj.packaging.mime.internet;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.messaging.saaj.packaging.mime.util)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.messaging.saaj.packaging.mime.util;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.messaging.saaj.soap)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.messaging.saaj.soap;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.messaging.saaj.soap.dynamic)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.messaging.saaj.soap.dynamic;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.messaging.saaj.soap.impl)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.messaging.saaj.soap.impl;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.messaging.saaj.soap.name)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.messaging.saaj.soap.name;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.messaging.saaj.soap.ver1_1)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.messaging.saaj.soap.ver1_1;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.messaging.saaj.soap.ver1_2)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.messaging.saaj.soap.ver1_2;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.messaging.saaj.util)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.messaging.saaj.util;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.messaging.saaj.util.stax)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.messaging.saaj.util.stax;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=com.sun.xml.messaging.saaj.util.transform)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.sun.xml.messaging.saaj.util.transform;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=javax.activation)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package javax.activation;resolution:=optional;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=javax.imageio))' extend='false' multiple='false' optional='true'>Import package javax.imageio;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.imageio.stream))' extend='false' multiple='false' optional='true'>Import package javax.imageio.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.bind.attachment)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='true'>Import package javax.xml.bind.attachment;resolution:=optional;version="[2.3,3)"</require>
    <require name='package' filter='(&amp;(package=javax.xml.messaging))' extend='false' multiple='false' optional='true'>Import package javax.xml.messaging;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.namespace))' extend='false' multiple='false' optional='true'>Import package javax.xml.namespace;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='true'>Import package javax.xml.parsers;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.soap)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package javax.xml.soap;resolution:=optional;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=javax.xml.stream))' extend='false' multiple='false' optional='true'>Import package javax.xml.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.sax))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.sax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stax))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.stax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.jvnet.fastinfoset))' extend='false' multiple='false' optional='true'>Import package org.jvnet.fastinfoset;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.jvnet.mimepull)(version&gt;=1.10.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.jvnet.mimepull;resolution:=optional;version="[1.10,2)"</require>
    <require name='package' filter='(&amp;(package=org.jvnet.staxex)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.jvnet.staxex;resolution:=optional;version="[1.8,2)"</require>
    <require name='package' filter='(&amp;(package=org.jvnet.staxex.util)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.jvnet.staxex.util;resolution:=optional;version="[1.8,2)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='true'>Import package org.xml.sax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax.ext))' extend='false' multiple='false' optional='true'>Import package org.xml.sax.ext;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax.helpers))' extend='false' multiple='false' optional='true'>Import package org.xml.sax.helpers;resolution:=optional</require>
  </resource>
  <resource id='stax-ex/1.8.3' symbolicname='stax-ex' presentationname='stax-ex OSGi Bundle' uri='mvn:org.jvnet.staxex/stax-ex/1.8.3' version='1.8.3'>
    <description>This OSGi bundle simply wraps stax-ex-1.8.3.jar artifact.</description>
    <size>33846</size>
    <documentation>http://www.jbundle.org</documentation>
    <license>http://www.gnu.org/licenses/gpl.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='stax-ex'/>
      <p n='presentationname' v='stax-ex OSGi Bundle'/>
      <p n='version' t='version' v='1.8.3'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jvnet.staxex'/>
      <p n='version' t='version' v='1.8.3'/>
      <p n='uses:' v='javax.activation,javax.xml.namespace,javax.xml.stream'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jvnet.staxex.util'/>
      <p n='version' t='version' v='1.8.3'/>
      <p n='uses:' v='javax.xml.bind.attachment,javax.xml.namespace,javax.xml.stream,org.w3c.dom'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.activation))' extend='false' multiple='false' optional='true'>Import package javax.activation;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.bind.attachment))' extend='false' multiple='false' optional='true'>Import package javax.xml.bind.attachment;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.namespace))' extend='false' multiple='false' optional='true'>Import package javax.xml.namespace;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.stream))' extend='false' multiple='false' optional='true'>Import package javax.xml.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.jvnet.staxex)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.jvnet.staxex;resolution:=optional;version="[1.8,2)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom;resolution:=optional</require>
  </resource>
</repository>